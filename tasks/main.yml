---
- name: "Ensure the {{ nginx_user }} user is present."
  user:
    name: "{{ nginx_user }}"
    home: "{{ nginx_homedir }}"
    shell: /usr/sbin/nologin
    system: yes

- name: Distribution specific installation
  include: "{{ ansible_distribution }}.yml"
  tags:
    - install

- name: Generate strong Diffie-Hellman group. This can take a while.
  command: "/usr/bin/openssl dhparam -out /etc/ssl/certs/dhparam.pem {{ nginx_dh_length }}"
  args:
    creates: "/etc/ssl/certs/dhparam.pem"

- name: Create vhost directories
  file:
    dest: "{{ nginx_conf_dir }}/{{ item }}"
    state: directory
  with_items:
    - sites-enabled
    - sites-available

- name: Copy config
  template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: Restart nginx

- name: Copy snippets & other configfiles
  copy:
    src: "{{ item }}/"
    dest: "{{ nginx_conf_dir }}/{{ item }}/"
  notify: Restart nginx
  with_items:
    - conf.d
    - snippets

# We do this before nginx is (re)started
# because we do not want to break a running
# nginx instance.
- name: Check configuration
  command: /usr/sbin/nginx -t

- name: Ensure nginx is enabled & running
  service:
    name: nginx
    state: started
    enabled: yes
